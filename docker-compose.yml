version: '3.8'

services:
  # Main application
#  outbox-app:
#    build: .
#    container_name: outbox-app
#    environment:
#      SPRING_PROFILES_ACTIVE: development
#      DB_HOST: mysql
#      DB_PORT: 3306
#      DB_DATABASE: outbox_enterprise
#      DB_USERNAME: outbox_user
#      DB_PASSWORD: secure_password
#      OUTBOX_PUBLISHER_TYPE: logging
#    ports:
#      - "8080:8080"
#    depends_on:
#      mysql:
#        condition: service_healthy
#      kafka:
#        condition: service_started
#      rabbitmq:
#        condition: service_healthy
#    volumes:
#      - ./logs:/app/logs
#    networks:
#      - outbox-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: outbox-mysql
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: outbox_enterprise
      MYSQL_USER: outbox_user
      MYSQL_PASSWORD: secure_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - outbox-network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: outbox-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - outbox-network

  # Kafka Message Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: outbox-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    networks:
      - outbox-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: outbox-kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8081:8080"
    depends_on:
      - kafka
    networks:
      - outbox-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: outbox-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - outbox-network

volumes:
  mysql_data:
    driver: local

networks:
  outbox-network:
    driver: bridge 